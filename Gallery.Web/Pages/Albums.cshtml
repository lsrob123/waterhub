@page "{albumName?}"
@inject ISettings settings
@inject ISiteInfoService siteInfoService;
@model AlbumsModel
@{
    ViewData[Constants.PageTitle] = siteInfoService.GetPageTitle(Model.AlbumName ?? "_test");
}

@if (Model.IsNotFound)
{
    <span>Album not found</span>
}
else if (Model.IsLoggedIn)
{
    <form method="post">
        <div class="album-info-editor">
            <div class="album-info-field">
                Description
            </div>
            <div class="album-info-field">
                <textarea asp-for="UpdatedDescription"></textarea>
            </div>
            <div class="album-info-field">
                <label><input type="checkbox" asp-for="IsVisible" /> Visible in Home Page</label>
            </div>
            <div class="album-info-field">
                <button asp-page-handler="AlbumInfo">Submit</button>
            </div>
        </div>
    </form>

    <div class="group-space">
        <form method="post" enctype="multipart/form-data">
            <input type="file" required="required" name="files" multiple="multiple" accept="image/*" />
            <button asp-page-handler="Upload">Upload Files</button>
        </form>
    </div>
}

@if (!Model.IsNotFound && Model.Album.Visibility == Visibility.Public)
{
    @if (!Model.IsLoggedIn)
    {
        <div class="album-info">@Model.Album.Description</div>
    }
    <div class="photos">
        @if (Model.Album.HasUploadImages)
        {
            foreach (var uploadImage in Model.Album.SortedUploadImages)
            {
                var imagePath = Model.IsLoggedIn ? uploadImage.IconUriPath : uploadImage.ThumbnailUriPath;
                var imageClass = Model.IsLoggedIn ? "thumb-in-index" : "thumb-in-album";

                <div class="photo-block">
                    <a href="/images/@uploadImage.UriPath" target="@uploadImage.ProcessedFileName">
                        <img class="@imageClass" src="/images/@imagePath" />
                    </a>
                    @if (Model.IsLoggedIn)
                    {
                        <div class="editing-area">
                            <strong>Display Order</strong> &nbsp;
                            <span id="span_@uploadImage.ProcessedFileName">@uploadImage.DisplayOrder</span> &nbsp;
                            <input style="display:none;" type="number" class="display-order" id="number_@uploadImage.ProcessedFileName"
                                   value="@uploadImage.DisplayOrder"
                                   onchange="album.updateUploadImageDisplayOrderAsync('@Model.Album.Name', '@uploadImage.ProcessedFileName', this.value)"
                                   onblur="album.toggleEditState('@uploadImage.ProcessedFileName',false)" /> &nbsp;
                            <img id="icon_@uploadImage.ProcessedFileName" class="edit-icon" src="/images/edit.svg"
                                 onclick="album.toggleEditState('@uploadImage.ProcessedFileName', true)" />
                        </div>
                    }
                </div>
            }
        }
        else
        {
            <span>(Empty)</span>
        }
    </div>
}

@section PageHeader
{
    <div class="arrow">&#9654;</div>
    <div class="page-title">
        @T.GetMap(Model.AlbumName)
    </div>
}